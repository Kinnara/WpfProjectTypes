<controls:MetroWindow
    x:Class="RibbonProject.Views.ShellWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:Fluent="urn:fluent-ribbon"
    xmlns:behaviors="clr-namespace:RibbonProject.Behaviors"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    mc:Ignorable="d"
    ShowSystemMenuOnRightClick="False"
    Loaded="MetroWindow_Loaded"
    ShowTitleBar="True"
    Title="RibbonProject" Height="450" Width="800">

    <controls:MetroWindow.TitleTemplate>
        <DataTemplate>
            <Fluent:RibbonTitleBar
                x:Name="RibbonTitleBar"
                Header="{Binding Path=Title, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}" />
        </DataTemplate>
    </controls:MetroWindow.TitleTemplate>

    <controls:MetroWindow.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Fluent:Ribbon x:Name="ribbonControl" Grid.Row="0">
                <!--Backstage-->
                <Fluent:Ribbon.Menu>
                    <Fluent:Backstage UseHighestAvailableAdornerLayer="False">
                        <Fluent:BackstageTabControl x:Name="backstageTabControl">
                            <i:Interaction.Behaviors>
                                <behaviors:BackstageTabNavigationBehavior x:Name="navigationBehavior" />
                            </i:Interaction.Behaviors>
                            <Fluent:BackstageTabItem
                                Tag="RibbonProject.ViewModels.SettingsViewModel"
                                Header="{x:Static strings:Resources.ShellPageRibbonBackstageTabSettingsHeader}" />
                            <Fluent:BackstageTabItem
                                Header="Main"
                                Tag="RibbonProject.ViewModels.MainViewModel" />
                            <Fluent:Button
                                Header="Navigate to Main Page"
                                Command="{Binding NavigateCommand}"
                                CommandParameter="RibbonProject.ViewModels.MainViewModel" />
                            <Fluent:Button
                                Header="Navigate to Secondary Page"
                                Command="{Binding NavigateCommand}"
                                CommandParameter="RibbonProject.ViewModels.SecondaryViewModel" />
                            <Fluent:Button
                                Header="Show Main in Dialog"
                                Command="{Binding ShowInDialogCommand}"
                                CommandParameter="RibbonProject.ViewModels.MainViewModel" />
                            <Fluent:Button
                                Header="Show Main in a New Window"
                                Command="{Binding OpenInANewWindowCommand}"
                                CommandParameter="RibbonProject.ViewModels.MainViewModel" />
                            <Fluent:Button
                                Header="Show Main in right pane"
                                Command="{Binding OpenInRightPaneCommand}"
                                CommandParameter="RibbonProject.ViewModels.MainViewModel" />
                        </Fluent:BackstageTabControl>
                    </Fluent:Backstage>
                </Fluent:Ribbon.Menu>

                <!--QuickAccessItems-->
                <!--<Fluent:Ribbon.QuickAccessItems>
                    <Fluent:QuickAccessMenuItem IsChecked="true" Header="Holaaa">
                        <Fluent:Button Header="Pink" />
                    </Fluent:QuickAccessMenuItem>

                    --><!--You Can Just Bind with Any Control--><!--
                    <Fluent:QuickAccessMenuItem Target="{Binding ElementName=buttonGreen}" />
                </Fluent:Ribbon.QuickAccessItems>-->
                <i:Interaction.Behaviors>
                    <behaviors:RibbonTabsBehavior x:Name="tabsBehavior" />
                </i:Interaction.Behaviors>

                <!--Tabs-->
                <Fluent:RibbonTabItem
                    Fluent:KeyTip="A"
                    Header="{x:Static strings:Resources.ShellPageRibbonTabHomeHeader}">
                    <Fluent:RibbonGroupBox
                        State="Large"
                        MinWidth="150"
                        Header="{x:Static strings:Resources.ShellPageRibbonHomeGroupCommon1Header}">
                    </Fluent:RibbonGroupBox>
                    <Fluent:RibbonGroupBox
                        State="Middle"
                        MinWidth="150"
                        Header="{x:Static strings:Resources.ShellPageRibbonHomeGroupCommon2Header}">
                    </Fluent:RibbonGroupBox>
                </Fluent:RibbonTabItem>
            </Fluent:Ribbon>
            <controls:SplitView
                Grid.Row="1"
                x:Name="splitView"
                PanePlacement="Right"
                OpenPaneLength="400">
                <controls:SplitView.Pane>
                    <Frame
                        x:Name="rightPaneFrame"
                        Focusable="False"
                        NavigationUIVisibility="Hidden"
                        Background="{DynamicResource MahApps.Brushes.Control.Background}"
                        BorderBrush="{DynamicResource MahApps.Brushes.Controls.Border}"
                        BorderThickness="1,1,0,0" />
                </controls:SplitView.Pane>
                <controls:SplitView.Content>
                    <Frame
                        x:Name="shellFrame"                        
                        Focusable="False"
                        NavigationUIVisibility="Hidden" />
                </controls:SplitView.Content>
            </controls:SplitView>
        </Grid>
    </controls:MetroWindow.Content>
</controls:MetroWindow>